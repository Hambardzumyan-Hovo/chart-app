{"version":3,"sources":["components/inputsContainer/inputNumber/styles.module.css","components/inputsContainer/selectCompanies/styles.module.css","components/inputsContainer/styles.module.css","components/main/styles.module.css","components/chartContainer/ChartContainer.js","api/requests.js","redux/reducers/mainReducer.js","components/inputsContainer/inputNumber/InputNumber.js","components/inputsContainer/selectCompanies/SelectCompanies.js","components/inputsContainer/InputsContainer.js","components/main/Main.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["module","exports","ChartContainer","data","labels","datasets","label","useSelector","state","predictedData","shallowEqual","backgroundColor","borderColor","borderWidth","receivedData","option","scales","yAxes","ticks","beginAtZero","AXIOS","axios","create","baseURL","getCompanyNames","a","get","res","getDataByCompanyname","name","initialState","companies","companyName","mainReducer","action","type","predicted","received","InputNumber","control","FormControl","className","styles","numberWrapper","defaultValue","render","field","TextField","SelectCompanies","dispatch","useDispatch","useEffect","then","status","InputLabel","id","rules","required","Select","labelId","numberInput","map","company","i","MenuItem","value","InputsContainer","useForm","handleSubmit","formContainer","onSubmit","clientData","Object","values","first","companyData","chunks","push","splice","length","elem","amount","chunk","reduce","b","input","Button","variant","color","Main","mainContainer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3775e7ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"numberWrapper\":\"styles_numberWrapper__kzvxV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"numberInput\":\"styles_numberInput__3q7_K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"styles_formContainer__3-zpC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"styles_mainContainer__1LqPT\"};","import { shallowEqual, useSelector } from 'react-redux';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nconst ChartContainer = () => {\r\n  const predictedData = useSelector(state => state.state.predictedData, shallowEqual);\r\n  const receivedData = useSelector(state => state.state.receivedData, shallowEqual);\r\n\r\n  const data = {\r\n    labels: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'],\r\n    datasets: [\r\n      {\r\n        label: 'Predicted data',\r\n        data: predictedData,\r\n        backgroundColor: ['rgb(255, 99, 132)'],\r\n        borderColor: ['rgba(255, 99, 132, 1)'],\r\n        borderWidth: 1,\r\n      },\r\n      {\r\n        label: 'Received data',\r\n        data: receivedData,\r\n        backgroundColor: ['rgb(54, 162, 235)'],\r\n        borderColor: ['rgba(54, 162, 235, 1)'],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  return (\r\n    <div>\r\n      <Bar data={data} option={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartContainer;\r\n","import axios from 'axios';\r\nconst BASE_URL = 'https://beta.softberg.org/api';\r\n\r\nconst AXIOS = axios.create({\r\n  baseURL: BASE_URL,\r\n});\r\n\r\nexport const getCompanyNames = async () => {\r\n  const res = await AXIOS.get('/companies');\r\n  return res;\r\n};\r\n\r\nexport const getDataByCompanyname = async name => {\r\n  const res = await AXIOS.get(`/yearly/${name}`);\r\n  return res;\r\n};\r\n","import { getCompanyNames, getDataByCompanyname } from '../../api/requests';\r\n\r\nconst initialState = { companies: [], predictedData: [], receivedData: [], companyName: '' };\r\nconst mainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_COMPANY_NAMES': {\r\n      return { ...state, companies: action.companies };\r\n    }\r\n    case 'SET_VALUES': {\r\n      return { ...state, predictedData: action.data.predicted, receivedData: action.data.received };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//actions\r\nexport const setCompanyNames = () => {\r\n  return dispatch => {\r\n    ///api call\r\n    getCompanyNames().then(res => {\r\n      if (res.status === 200) {\r\n        const companies = res.data.data;\r\n        dispatch({ type: 'SET_COMPANY_NAMES', companies });\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const setData = clientData => {\r\n  return dispatch => {\r\n    const [first, ...predicted] = Object.values(clientData);\r\n    getDataByCompanyname(first).then(res => {\r\n      const companyData = res.data.data;\r\n      const chunks = [];\r\n      for (let i = 4; i > 0; i--) {\r\n        chunks.push(companyData.splice(0, companyData.length / i).map(elem => elem.amount));\r\n      }\r\n      const received = chunks.map(chunk => {\r\n        return chunk.reduce((a, b) => a + b, 0);\r\n      });\r\n      const data = { predicted, received };\r\n      dispatch({ type: 'SET_VALUES', data });\r\n    });\r\n  };\r\n};\r\n\r\nexport default mainReducer;\r\n","import { FormControl, TextField } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Controller } from 'react-hook-form';\r\nimport styles from './styles.module.css';\r\n\r\nconst InputNumber = ({ name, control }) => {\r\n  return (\r\n    <FormControl className={styles.numberWrapper}>\r\n      <label>{name}</label>\r\n      <Controller\r\n        control={control}\r\n        name={name}\r\n        defaultValue={0}\r\n        render={({ field }) => <TextField {...field} type='number'></TextField>}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default InputNumber;\r\n","import { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport { Controller } from 'react-hook-form';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { setCompanyNames } from '../../../redux/reducers/mainReducer';\r\nimport styles from './styles.module.css';\r\n\r\nconst SelectCompanies = ({ control }) => {\r\n  const dispatch = useDispatch();\r\n  const companies = useSelector(state => state.state.companies, shallowEqual);\r\n\r\n  useEffect(() => {\r\n    dispatch(setCompanyNames());\r\n    return () => {};\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <FormControl>\r\n      <InputLabel id='company-label'>Company</InputLabel>\r\n      <Controller\r\n        control={control}\r\n        name='CompanyName'\r\n        defaultValue={''}\r\n        rules={{ required: true }}\r\n        render={({ field }) => (\r\n          <Select {...field} labelId='company-label' className={styles.numberInput} required>\r\n            {companies.map((company, i) => (\r\n              <MenuItem key={i} value={company.name}>\r\n                {company.name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        )}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default SelectCompanies;\r\n","import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setData } from '../../redux/reducers/mainReducer';\r\nimport InputNumber from './inputNumber/InputNumber';\r\nimport SelectCompanies from './selectCompanies/SelectCompanies';\r\nimport styles from './styles.module.css';\r\n\r\nconst InputsContainer = () => {\r\n  const numberInputs = [\r\n    { name: '1st quarter' },\r\n    { name: '2nd quarter' },\r\n    { name: '3rd quarter' },\r\n    { name: '4th quarter' },\r\n  ];\r\n  const { handleSubmit, control } = useForm();\r\n  const dispatch = useDispatch();\r\n  const onSubmit = data => {\r\n    dispatch(setData(data));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.formContainer}>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <SelectCompanies control={control} />\r\n        {numberInputs.map((input, i) => (\r\n          <InputNumber key={i} name={input.name} control={control} />\r\n        ))}\r\n\r\n        <Button type='submit' variant='contained' color='primary'>\r\n          Calc\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputsContainer;\r\n","import React from 'react';\r\nimport ChartContainer from '../chartContainer/ChartContainer';\r\nimport InputsContainer from '../inputsContainer/InputsContainer';\r\nimport styles from './styles.module.css';\r\n\r\nconst Main = () => {\r\n  return (\r\n    <div className={styles.mainContainer}>\r\n      <InputsContainer />\r\n      <ChartContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import './App.css';\nimport Main from './components/main/Main';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport mainReducer from './reducers/mainReducer';\r\n\r\nconst reducers = combineReducers({\r\n  state: mainReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}